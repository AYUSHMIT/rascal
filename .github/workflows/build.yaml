name: Build and Deploy
on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.*'
  pull_request:
    branches:
      - master
env:
  MAVEN_OPTS: "-Xmx4G -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

jobs:
  builds:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile & Bootstrap
        run: mvn -B compile

      - name: Generate tutor
        run: mvn -B -Drascal.courses=--buildCourses compile

      - name: Test if release # just to be extra sure for a release
        if: startsWith(github.ref, 'refs/tags/v')
        run: mvn -Drascal.test.memory=4 test

      - name: Attach artifact
        id: build-artifact
        uses: SWAT-engineering/maven-full-artifacts-action@v1

      - name: Prepare Draft Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: ${{ steps.build-artifact.outputs.artifact-root-dir}}/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/v')
        uses: usethesource/releases-maven-action@v1
        with:
          maven-username: ${{ secrets.RELEASE_MAVEN_USERNAME }}
          maven-password: ${{ secrets.RELEASE_MAVEN_PASSWORD }}
          maven-local-port: ${{ secrets.RELEASE_MAVEN_LOCAL_PORT }}
          ssh-hostname: ${{ secrets.RELEASE_SSH_SERVER }}
          ssh-known-host: ${{ secrets.RELEASE_SSH_KNOWN_HOSTS }}
          ssh-username: ${{ secrets.RELEASE_SSH_USERNAME }}
          ssh-private-key: ${{ secrets.RELEASE_SSH_PRIVATE_KEY }}

      - name: Report Failure
        if: failure()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.RASCAL_SLACK_WEBHOOK }}

  tests:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps: 
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Tests
        # single quotes to help windows deal with argument splitting
        run: mvn -B '-Drascal.compile.skip' '-Drascal.test.memory=4' test

      - uses: codecov/codecov-action@v1
        with:
          token: e8b4481a-d178-4148-a4ff-502906390512

      - name: Publish Test Report on github action
        if: ${{ always() && github.event_name != 'pull_request' }} # to bad this doesn't work nicely with external pull requests
        uses: scacap/action-surefire-report@v1
        with:
          check_name: "Test Report - ${{ runner.os }}"

      - name: Report Failure
        if: failure()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.RASCAL_SLACK_WEBHOOK }}
